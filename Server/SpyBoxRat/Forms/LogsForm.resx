<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LOGS_MENU.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3cReHt2/VkTavFZE2rhTRNa4T0TWtEtE0rRLRNKw
        R0TOsEREzrBERM6wRETOsEREzrBERNOwRh0AAAAAAAAAAODDX6bewVz/3b5Z/9u8Vv/ZulT/17hR/9W2
        Tv/UtEv/tqh6/7Kyef/Pr0X/0LBF/9CwRf/RsEalAAAAAAAAAADjxmOq4cRg/9/BXf/dv1v/3L1Y/9q7
        Vf/YuVL/1rdP/7O2f/8Lvun/XKeO/8+vRf/QsEX/0bBFqgAAAAAAAAAA5sloquTGZP/TsD7/4MJf/8ih
        Jv/HoCP/xp8i/8afIf/CnCD/UaCE/wC+7f9hpor/z69F/9GwRaoAAAAAAAAAAOnMbKrmyWn/1bNE/+PF
        Y//LpS3/yaMp/8mjKP/Ioif/yKEm/8SfJf9Kooz/AL7t/2GojP/PsUeqAAAAAAAAAADsznGq6cxt/+DB
        W//lyGf/2blO/9m3S//XtUn/1rRH/9SyRf/TsUP/0K1B/1qmjP8Avu3/V6qd2QAAAAAAAAAA7dF0quvP
        cf/iwlz/6Mtr/9q4TP/Ytkj/17RH/9azRf/VskP/07BB/9KvP//OrT7/aqmQ/87Ry/bEv9ZwAAAAAPDU
        eKru0nX/2bdI/+rOb//LpSv/yqMn/8miJv/Joib/yKEl/8ihJP/HoCP/x6Al/9i7VP/Cs5bUaFjMoAAA
        AADy132q8dV5/+/Tdv/t0XT/689x/+nNbv/oy2v/5slo/+THZf/ixWL/4MNf/9/BXf/dv1r/271XqgAA
        AAAAAAAA6bpWlOe3U83ltFPN4rNSzeCxUM3dr07N261LzdiqS83WqUjN06dHzdGjRs3Oo0PNzJ9Dzc2g
        Q5QAAAAAAAAAANF2AKbOdAH/ynIC/8dwA//DbgP/v2sE/7xpBf+4Zwb/tGQH/7FiCP+tYAj/qV4J/6Zb
        Cv+iWgulAAAAAAAAAADVdwAez3UAVcxyA1XGbwNVw28DVcBsA1W9aQZVumYGVbRmBlWxYwZVrmAJVatd
        CVWlXQlVp1gJHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIAA
        AACAAQAAgAEAAIABAAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv79ABN/B
        W4fdv1qq3b9Zqtu9V6ravFaq2rxUqti6U6rYuVGq17lQqte3TqrVtk2q1LZLqtSzSqrSs0iq0bFHqtGw
        R6rRsEWq0bBFqtGwRarRsEWq0bBFqtGwRarRsEWq0bBFqtGwRarPsEWFqqpVAwAAAAAAAAAAAAAAAAAA
        AADfw2BI38Fd/97AXP/dv1r/3L5Z/9y9WP/bvFb/2rtV/9m6U//YuVL/17hQ/9a3T//Vtk3/1LVM/9O0
        S//Ts0n/v6VS/7uiU//IqUL/zq5E/9CwRf/QsEX/0LBF/9CwRf/QsEX/0LBF/9CwRf/Qr0VGAAAAAAAA
        AAAAAAAAAAAAAOHDYFXgw1//4MJe/9/BXP/ewFv/3b9a/9y+WP/bvVf/2rxV/9m7VP/YulL/17lR/9e4
        UP/Wtk7/1bVN/9S0S/+7pV3/r6+v/9bd0v95sJX/y6xD/9CwRf/QsEX/0LBF/9CwRf/QsEX/0LBF/8+x
        RVUAAAAAAAAAAAAAAAAAAAAA5MZjVeLEYf/hw2D/4MJf/9/BXf/ewFz/3b9a/9y+Wf/bvVf/27xW/9q7
        VP/ZulP/2LlS/9e4UP/Wt0//1bZN/8utSf/c4dv/Psvu/wG+7f9mpIL/zKxE/9CwRf/QsEX/0LBF/9Cw
        Rf/QsEX/z7FFVQAAAAAAAAAAAAAAAAAAAADkxmZV48Zk/+LFYv/hxGH/4MNf/9/CXv/fwVz/3sBb/92/
        Wf/cvlj/271X/9q8Vf/ZulT/2LlS/9e4Uf/Wt0//07RN/3aym/8Avu3/AL7t/wC+7f9bpY3/yqxD/9Cw
        Rf/QsEX/0LBF/9CwRf/PsUVVAAAAAAAAAAAAAAAAAAAAAOTJZlXkx2b/48Zk/+PFY//AlRL/17VI/+DC
        Xv/fwV3/wJUS/7+UD/+/lA//v5QP/7+UD/+/lA//v5QP/7+UD/+/lA//upAP/0edhf8Avu3/AL7t/wG9
        7P9gpYn/za1F/9CwRf/QsEX/0LBF/8+xRVUAAAAAAAAAAAAAAAAAAAAA58lpVebJaP/lyGb/5Mdl/9i4
        Sv/fwVz/4cRg/+DDX//VtUb/1LJC/9SxQv/TsED/069A/9KuPv/Rrj7/0a09/9CsPP/PrDv/yKY5/02l
        lP8Avu3/AL7t/wG97P9fpIn/za1G/9CwRf/QsEX/z7FFVQAAAAAAAAAAAAAAAAAAAADnzGxV58pq/+bJ
        aP/lyGf/27pP/+DCXv/ixWP/4sRh/9m3TP/XtUn/17VI/9a0R//Vs0b/1LJF/9SyRP/TsUP/0rBC/9Kv
        Qf/Rrz//yqk+/0ymlv8Avu3/AL7t/wG97P9gpYr/za5G/9CxRv/PsUVVAAAAAAAAAAAAAAAAAAAAAOrM
        bFXozGz/58tq/+bKaf/AlhL/2rhM/+THZf/jxmP/wJYR/7+UD/+/lA//v5QP/7+UD/+/lA//v5QP/7+U
        D/+/lA//v5QP/7+UD/+/lA//upAP/0adhv8Avu3/AL7t/wC+7f9hpYr/zq5H/9KxRVUAAAAAAAAAAAAA
        AAAAAAAA6s9vVerNbv/pzGz/6Mtr/+fKav/myWj/5chn/+THZf/jxmT/4sVi/+HEYf/hw2D/4MJe/9/B
        Xf/ewFv/3b9a/9y+WP/bvVf/2rxV/9m7VP/YulP/0rRO/0+sn/8Avu3/AL7t/wC+7f9fpYr/xahGWAAA
        AAAAAAAAAAAAAAAAAADtz3JV689w/+rOb//pzW3/zqgx/+DBWf/mymn/5cln/82nL//LpSv/y6Ur/8qk
        K//KpCr/yqQq/8mjKf/Joyn/yaMo/8iiKP/Ioif/yKIn/8ihJv/HoSb/wJwk/1Gghf8Avu3/AL7t/wC+
        7f92s6mnAAAAAAAAAAAAAAAAAAAAAO3SdVXs0HL/689x/+rOb//Mpi3/4cJb/+jLa//nymn/y6Ur/8mi
        Jv/Joib/yaIm/8iiJf/IoSX/yKEk/8ihJP/HoCT/x6Aj/8egI//HoCL/xp8i/8afIv/GnyH/wJsj/06r
        n/8Avu3/a7q+/9jY1/3X19d0AAAAAAAAAAAAAAAA7dJ1Ve3SdP/t0XP/7NBx/+vPcP/qzm7/6c1t/+jM
        bP/ny2r/5slp/+XIZ//kx2b/5MZk/+PFY//ixGH/4cNg/+DCX//fwV3/3sBc/92/Wv/cvln/271X/9u8
        Vv/au1T/0rVQ/4qsiv/Z2dj/2tra/9jW2uJwY8x0AAAAAAAAAADw1XhV79N2/+7Sdf/t0XP/wJYS/969
        VP/qzm//6c1u/8CWEv+/lA//v5QP/7+UD/+/lA//v5QP/7+UD/+/lA//v5QP/7+UD/+/lA//v5QP/7+U
        D/+/lA//v5QP/8CVEf/avFX/0rVR/8e7lf/Y19bxc2TM5WBQys0AAAAAAAAAAPDVe1Xw1Xj/79R3/+7T
        df/fwFb/6Mxs/+zQcf/rz3D/3b1S/9u5Tv/buEz/2rhM/9m3S//Ztkr/2LZJ/9e1SP/XtEf/17RG/9az
        Rf/VskT/1bJD/9SxQv/TsEH/07JD/9u9V//avFb/07ZR/4p2paRgT8nIXVHFFgAAAAAAAAAA89h7VfHW
        ev/w1Xn/8NR4/+/Tdv/u0nX/7dFz/+zQcv/rz3D/6s5v/+nNbf/ozGz/58tr/+fKaf/myWj/5chm/+TH
        Zf/jxmP/4sVi/+HEYf/gw1//38Je/97BXP/ewFv/3b9Z/9y9WP/bvFb/27pUVQAAAAAAAAAAAAAAAAAA
        AADz2H5V89h9//LXe//x1nr/8NV4/+/Ud//u03X/7dF0/+zQcv/rz3H/685w/+rNbv/pzG3/6Mtr/+fK
        av/myWj/5chn/+THZf/jxmT/4sVj/+LEYf/hw2D/4MJe/9/BXf/ewFv/3b9a/9y+Wf/bvVdVAAAAAAAA
        AAAAAAAAAAAAAPPYflXz2H3/89h9//LXfP/x1nr/8NV5/+/Ud//v03b/7tJ1/+3Rc//s0HL/689w/+rO
        b//pzW3/6Mxs/+fLav/mymn/5slo/+XIZv/kx2X/48Zj/+LFYv/hxGD/4MNf/9/BXf/ewFz/3b9b/969
        WlUAAAAAAAAAAAAAAAAAAAAA25MkTtaFEsbTgxPG0oITxtGBE8bPgBPGzoATxst+E8bKfBPGyHwVxsZ5
        FcbFeRXGwngVxsF2E8bAdhXGvXUVxr10Fsa7cxbGuXAWxrdwFca0bxXGtG0WxrJtFsawbBfGr2sXxq1q
        FsarZxbGtHYhTgAAAAAAAAAAAAAAAAAAAADSeABV0HYA/891Af/NdAH/y3MC/8lxAv/HcAL/xW8D/8Ru
        A//CbQT/wGwE/75rBf+8aQX/umgF/7lnBv+3Zgb/tWUH/7NkB/+xYwf/sGEI/65gCP+sXwn/ql4J/6hd
        Cv+mXAr/pVsK/6NaC/+iWgxVAAAAAAAAAAAAAAAAAAAAANF4AEjRdgD/z3UB/810Af/LcwL/yXIC/8hx
        Av/GbwP/xG4D/8JtBP/AbAT/v2sE/71qBf+7aQX/uWcG/7dmBv+1ZQf/tGQH/7JjB/+wYgj/rmEI/6xf
        Cf+qXgn/qV0J/6dcCv+lWwr/o1oL/6BXC0YAAAAAAAAAAAAAAAAAAAAAv4AABNJ1AIfPdQG7zXQBu81z
        AbvKcwG7yHEBu8ZwA7vEbgO7w20Eu8JsBLu/agS7vmoFu7tpBbu5aAW7uGYFu7VlBbu0ZAe7s2QHu7Bi
        CLuvYQi7rV8Ku6pfCrupXQq7plsKu6VbCrulWgyFqlUAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAPgAAAD4AAAAeAAAADgAAAB4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB///////////////////////////
</value>
  </data>
</root>